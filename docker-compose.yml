version: '3.8'

services:
  api:
    depends_on:
      - db
    build: ./
    ports:
      - "42800:42800"
    networks:
      - mynetwork
    restart: on-failure
    container_name: api-service
    image: api-service
    env_file:
      - .env
    environment:
      - APP_PORT=42800
      - USER_ENDPOINT=${USER_ENDPOINT}
      - AUTH_ENDPOINT=${AUTH_ENDPOINT}
  userService:
    depends_on:
      - db
    build: ../userService
    container_name: user-service
    image: user-service
    ports:
      - "32800:32800"
    networks:
      - mynetwork
    restart: on-failure
    env_file:
      - .env
    environment:
      - APP_PORT=32800
      - CONNECTION_STRING=${CONNECTION_STRING}
  authService:
    depends_on:
      - db
    build: ../authService
    container_name: auth-service
    image: auth-service
    ports:
      - "22800:22800"
    networks:
      - mynetwork
    restart: on-failure
    env_file:
      - .env
    environment:
      - APP_PORT=22800
      - USER_ENDPOINT=${USER_ENDPOINT}
  db:
    container_name: postgres_db
    image: postgres:latest
    restart: always
    volumes:
      - my-data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - mynetwork
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
  flyway:
    image: flyway/flyway:latest
    environment:
      - FLYWAY_USER=${POSTGRES_USER}
      - FLYWAY_PASSWORD=${POSTGRES_PASSWORD}
      - FLYWAY_URL=jdbc:postgresql://postgres_db:${POSTGRES_PORT}/${POSTGRES_DB}
    command: -locations=filesystem:/flyway/sql migrate
    volumes:
      - $PWD/../userService/migrations:/flyway/sql
    depends_on:
      - db
    networks:
      - mynetwork
volumes:
  my-data:
    name: my-data

networks:
  mynetwork:
    driver: bridge